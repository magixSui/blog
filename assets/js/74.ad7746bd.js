(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{240:function(t,e,a){"use strict";a.r(e);var s=a(0),o=Object(s.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"github-page-部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#github-page-部署"}},[t._v("#")]),t._v(" Github Page 部署")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("部署 Github Page 使用 "),a("code",[t._v("git push --force")]),t._v(" 覆盖当前分支的历史记录，所以确定你只是处于这个特殊的目的部署到分支，就像 "),a("code",[t._v("gh_pages")]),t._v(" 。\n可能需要通过设置 "),a("code",[t._v("keep_history")]),t._v(" 为 "),a("code",[t._v("true")]),t._v(' 禁止"force push"行为，')])]),t._v(" "),a("p",[t._v("Travis CI 可以在 build 成功后部署你的静态文件到 Github Page 。"),a("br"),t._v("\n你可能需要提供一个 "),a("code",[t._v("access token")]),t._v(" 然后设置部署提供者的细节。 "),a("br"),t._v("\n下面是一个最小化配置，添加到你的 "),a("code",[t._v(".travis.yml")]),t._v(" 。")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deploy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("provider")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pages\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("skip_cleanup")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("github_token")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $GITHUB_TOKEN  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set in the settings page of your repository, as a secure variable")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("keep_history")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" master\n")])])]),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("确定你将 "),a("code",[t._v("skip_cleanup")]),t._v(" 设置为 "),a("code",[t._v("true")]),t._v(" ，否则 Travis CI 将会删除所有构建中创建的文件， 这可能会删除你想上传的文件。")])]),t._v(" "),a("h2",{attrs:{id:"设置-github-token"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置-github-token"}},[t._v("#")]),t._v(" 设置 Github token")]),t._v(" "),a("p",[t._v("你需要生成一个个人 "),a("code",[t._v("public_repo")]),t._v(" 或 "),a("code",[t._v("repo")]),t._v(" "),a("code",[t._v("access token")]),t._v(" 。（ 对于私有项目 "),a("code",[t._v("repo")]),t._v(" 是必须的）。由于 token 应该是私有的\n你想要在你的仓库设置或在 "),a("code",[t._v(".travis.yml")]),t._v(" 中通过加密变量的方式安全的将他发送到  Travis 。")]),t._v(" "),a("h2",{attrs:{id:"之后的配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#之后的配置"}},[t._v("#")]),t._v(" 之后的配置")]),t._v(" "),a("ul",[a("li",[t._v("local_dir: 推送到 Github Page 的目录，默认当前目录。 可以通过绝对路径或相对路径特殊指定。")]),t._v(" "),a("li",[t._v("repo: Repo slug, 默认当前 repo.")]),t._v(" "),a("li",[t._v("target_branch: 推送 local_dir 内容到分支（force，查看: keep_history）, 默认  gh_pages。")]),t._v(" "),a("li",[t._v("keep_history: Optional, create incremental commit instead of doing push force, defaults to false.")]),t._v(" "),a("li",[t._v("fqdn: Optional, sets a custom domain for your website, defaults to no custom domain support.")]),t._v(" "),a("li",[t._v("project_name: Defaults to value of fqdn or repo slug, used for metadata.")]),t._v(" "),a("li",[t._v("email: 配置项, 提交者信息, 默认 deploy@travis-ci.org.")]),t._v(" "),a("li",[t._v("name: 配置项, 提交者, 默认部署机器人。")]),t._v(" "),a("li",[t._v("committer_from_gh: Optional, defaults to false. Allows you to use the token’s owner name and email for commit. Overrides email and name options.")]),t._v(" "),a("li",[t._v("allow_empty_commit: Optional, defaults to false. Enabled if only keep_history is true.")]),t._v(" "),a("li",[t._v("github_url: Optional, the URL of the self-hosted GitHub enterprise, defaults to github.com.")]),t._v(" "),a("li",[t._v("verbose: Optional, be verbose about internal steps, defaults to false.")]),t._v(" "),a("li",[t._v("deployment_file: Optional, defaults to false, enables creation of deployment-info files.")])])])}],!1,null,null,null);e.default=o.exports}}]);